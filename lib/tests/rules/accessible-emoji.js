// Generated by CoffeeScript 2.5.0
(function() {
  /* eslint-env jest */
  var RuleTester, expectedError, parserOptionsMapper, path, rule, ruleTester;

  /**
   * @fileoverview Enforce <marquee> elements are not used.
   * @author Ethan Cohen
   */
  // -----------------------------------------------------------------------------
  // Requirements
  // -----------------------------------------------------------------------------
  path = require('path');

  ({RuleTester} = require('eslint'));

  ({
    default: parserOptionsMapper
  } = require('../eslint-plugin-jsx-a11y-parser-options-mapper'));

  rule = require('eslint-plugin-jsx-a11y/lib/rules/accessible-emoji');

  // -----------------------------------------------------------------------------
  // Tests
  // -----------------------------------------------------------------------------
  ruleTester = new RuleTester({
    parser: path.join(__dirname, '../../..')
  });

  expectedError = {
    message: 'Emojis should be wrapped in <span>, have role="img", and have an accessible description with aria-label or aria-labelledby.',
    type: 'JSXOpeningElement'
  };

  ruleTester.run('accessible-emoji', rule, {
    valid: [
      {
        code: '<div />'
      },
      {
        code: '<span />'
      },
      {
        code: '<span>No emoji here!</span>'
      },
      {
        code: '<span role="img" aria-label="Panda face">🐼</span>'
      },
      {
        code: '<span role="img" aria-label="Snowman">&#9731;</span>'
      },
      {
        code: '<span role="img" aria-labelledby="id1">🐼</span>'
      },
      {
        code: '<span role="img" aria-labelledby="id1">&#9731;</span>'
      },
      {
        code: '<span role="img" aria-labelledby="id1" aria-label="Snowman">&#9731;</span>'
      },
      {
        code: '<span>{props.emoji}</span>'
      },
      {
        code: '<span aria-hidden>{props.emoji}</span>'
      },
      {
        code: '<span aria-hidden="true">🐼</span>'
      },
      {
        code: '<span aria-hidden>🐼</span>'
      },
      {
        code: '<div aria-hidden="true">🐼</div>'
      }
    ].map(parserOptionsMapper),
    invalid: [
      {
        code: '<span>🐼</span>',
        errors: [expectedError]
      },
      {
        code: '<span>foo🐼bar</span>',
        errors: [expectedError]
      },
      {
        code: '<span>foo 🐼 bar</span>',
        errors: [expectedError]
      },
      {
        code: '<i role="img" aria-label="Panda face">🐼</i>',
        errors: [expectedError]
      },
      {
        code: '<i role="img" aria-labelledby="id1">🐼</i>',
        errors: [expectedError]
      },
      {
        code: '<Foo>🐼</Foo>',
        errors: [expectedError]
      },
      {
        code: '<span aria-hidden="false">🐼</span>',
        errors: [expectedError]
      }
    ].map(parserOptionsMapper)
  });

}).call(this);
