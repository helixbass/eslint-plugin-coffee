// Generated by CoffeeScript 2.5.0
(function() {
  /**
   * @fileoverview This rule shoud require or disallow spaces before or after unary operations.
   * @author Marcin Kumorek
   */
  'use strict';
  var RuleTester, path, rule, ruleTester;

  //------------------------------------------------------------------------------
  // Requirements
  //------------------------------------------------------------------------------
  rule = require('../../rules/space-unary-ops');

  ({RuleTester} = require('eslint'));

  path = require('path');

  //------------------------------------------------------------------------------
  // Tests
  //------------------------------------------------------------------------------
  ruleTester = new RuleTester({
    parser: path.join(__dirname, '../../..')
  });

  ruleTester.run('space-unary-ops', rule, {
    valid: [
      {
        code: '++this.a',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: '++@a',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: '--this.a',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'this.a++',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'this.a--',
        options: [
          {
            words: true
          }
        ]
      },
      'foo .bar++',
      {
        code: 'delete foo.bar',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'delete foo["bar"]',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'delete foo.bar',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'delete(foo.bar)',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'do->',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'do ->',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'do a',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'do a',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'new Foo',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'new Foo()',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'new [foo][0]',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'new[foo][0]',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'not b',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'typeof foo',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'typeof{foo:true}',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'typeof {foo:true}',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'typeof (foo)',
        options: [
          {
            words: true
          }
        ]
      },
      {
        code: 'typeof(foo)',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: 'typeof!foo',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: '-1',
        options: [
          {
            nonwords: false
          }
        ]
      },
      {
        code: '!foo',
        options: [
          {
            nonwords: false
          }
        ]
      },
      {
        code: '!!foo',
        options: [
          {
            nonwords: false
          }
        ]
      },
      {
        code: 'foo++',
        options: [
          {
            nonwords: false
          }
        ]
      },
      {
        code: '++foo',
        options: [
          {
            nonwords: false
          }
        ]
      },
      {
        code: '++ foo',
        options: [
          {
            nonwords: true
          }
        ]
      },
      '-> yield (0)',
      '-> yield +1',
      '-> yield* 0',
      '-> yield * 0',
      '-> (yield)*0',
      '-> (yield) * 0',
      '-> yield*0',
      '-> yield *0',
      '-> await {foo: 1}',
      '-> await {bar: 2}',
      {
        code: '-> await{baz: 3}',
        options: [
          {
            words: false
          }
        ]
      },
      {
        code: '-> await {qux: 4}',
        options: [
          {
            words: false,
            overrides: {
              await: true
            }
          }
        ]
      },
      {
        code: '-> await{foo: 5}',
        options: [
          {
            words: true,
            overrides: {
              await: false
            }
          }
        ]
      },
      {
        code: 'foo++',
        options: [
          {
            nonwords: true,
            overrides: {
              '++': false
            }
          }
        ]
      },
      {
        code: 'foo++',
        options: [
          {
            nonwords: false,
            overrides: {
              '++': false
            }
          }
        ]
      },
      {
        code: '++foo',
        options: [
          {
            nonwords: true,
            overrides: {
              '++': false
            }
          }
        ]
      },
      {
        code: '++foo',
        options: [
          {
            nonwords: false,
            overrides: {
              '++': false
            }
          }
        ]
      },
      {
        code: '!foo',
        options: [
          {
            nonwords: true,
            overrides: {
              '!': false
            }
          }
        ]
      },
      {
        code: '!foo',
        options: [
          {
            nonwords: false,
            overrides: {
              '!': false
            }
          }
        ]
      },
      {
        code: 'new foo',
        options: [
          {
            words: true,
            overrides: {
              new: false
            }
          }
        ]
      },
      {
        code: 'new foo',
        options: [
          {
            words: false,
            overrides: {
              new: false
            }
          }
        ]
      },
      {
        code: '-> yield(0)',
        options: [
          {
            words: true,
            overrides: {
              yield: false
            }
          }
        ]
      },
      {
        code: '-> yield(0)',
        options: [
          {
            words: false,
            overrides: {
              yield: false
            }
          }
        ]
      },
      {
        code: 'foo++',
        options: [
          {
            nonwords: true
          }
        ]
      },
      {
        code: 'foo .bar++',
        options: [
          {
            nonwords: true
          }
        ]
      },
      {
        code: 'b?',
        options: [
          {
            nonwords: true
          }
        ]
      }
    ],
    invalid: [
      {
        code: 'delete(foo.bar)',
        output: 'delete (foo.bar)',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'delete' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'delete(foo["bar"]);',
        output: 'delete (foo["bar"]);',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'delete' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'delete (foo.bar)',
        output: 'delete(foo.bar)',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'delete'.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'new(Foo)',
        output: 'new (Foo)',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'new' must be followed by whitespace.",
            type: 'NewExpression'
          }
        ]
      },
      {
        code: 'new (Foo)',
        output: 'new(Foo)',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'new'.",
            type: 'NewExpression'
          }
        ]
      },
      {
        code: 'new(Foo())',
        output: 'new (Foo())',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'new' must be followed by whitespace.",
            type: 'NewExpression'
          }
        ]
      },
      {
        code: 'new [foo][0]',
        output: 'new[foo][0]',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'new'.",
            type: 'NewExpression'
          }
        ]
      },
      {
        code: 'not{foo:true}',
        output: 'not {foo:true}',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'not' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof(foo)',
        output: 'typeof (foo)',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'typeof' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof (foo)',
        output: 'typeof(foo)',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'typeof'.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof[foo]',
        output: 'typeof [foo]',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'typeof' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof [foo]',
        output: 'typeof[foo]',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'typeof'.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof{foo:true}',
        output: 'typeof {foo:true}',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'typeof' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof {foo:true}',
        output: 'typeof{foo:true}',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'typeof'.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: 'typeof!foo',
        output: 'typeof !foo',
        options: [
          {
            words: true
          }
        ],
        errors: [
          {
            message: "Unary word operator 'typeof' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: '! foo',
        output: '!foo',
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '!'."
          }
        ]
      },
      {
        code: '!foo',
        output: '! foo',
        options: [
          {
            nonwords: true
          }
        ],
        errors: [
          {
            message: "Unary operator '!' must be followed by whitespace."
          }
        ]
      },
      {
        code: '!! foo',
        output: '!!foo',
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '!'.",
            type: 'UnaryExpression',
            line: 1,
            column: 2
          }
        ]
      },
      {
        code: '!!foo',
        output: '!! foo',
        options: [
          {
            nonwords: true
          }
        ],
        errors: [
          {
            message: "Unary operator '!' must be followed by whitespace.",
            type: 'UnaryExpression',
            line: 1,
            column: 2
          }
        ]
      },
      {
        code: '- 1',
        output: '-1',
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '-'.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: '-1',
        output: '- 1',
        options: [
          {
            nonwords: true
          }
        ],
        errors: [
          {
            message: "Unary operator '-' must be followed by whitespace.",
            type: 'UnaryExpression'
          }
        ]
      },
      {
        code: '++ foo',
        output: '++foo',
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '++'."
          }
        ]
      },
      {
        code: '++foo',
        output: '++ foo',
        options: [
          {
            nonwords: true
          }
        ],
        errors: [
          {
            message: "Unary operator '++' must be followed by whitespace."
          }
        ]
      },
      {
        code: '+ +foo',
        output: null,
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '+'."
          }
        ]
      },
      {
        code: '+ ++foo',
        output: null,
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '+'."
          }
        ]
      },
      {
        code: '- -foo',
        output: null,
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '-'."
          }
        ]
      },
      {
        code: '- --foo',
        output: null,
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '-'."
          }
        ]
      },
      {
        code: '+ -foo',
        output: '+-foo',
        options: [
          {
            nonwords: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary operator '+'."
          }
        ]
      },
      {
        code: '-> yield(0)',
        output: '-> yield (0)',
        errors: [
          {
            message: "Unary word operator 'yield' must be followed by whitespace.",
            type: 'YieldExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: '-> yield (0)',
        output: '-> yield(0)',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'yield'.",
            type: 'YieldExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: '-> yield+0',
        output: '-> yield +0',
        errors: [
          {
            message: "Unary word operator 'yield' must be followed by whitespace.",
            type: 'YieldExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: '++foo',
        output: '++ foo',
        options: [
          {
            nonwords: true,
            overrides: {
              '++': true
            }
          }
        ],
        errors: [
          {
            message: "Unary operator '++' must be followed by whitespace."
          }
        ]
      },
      {
        code: '++foo',
        output: '++ foo',
        options: [
          {
            nonwords: false,
            overrides: {
              '++': true
            }
          }
        ],
        errors: [
          {
            message: "Unary operator '++' must be followed by whitespace."
          }
        ]
      },
      {
        code: '!foo',
        output: '! foo',
        options: [
          {
            nonwords: true,
            overrides: {
              '!': true
            }
          }
        ],
        errors: [
          {
            message: "Unary operator '!' must be followed by whitespace."
          }
        ]
      },
      {
        code: '!foo',
        output: '! foo',
        options: [
          {
            nonwords: false,
            overrides: {
              '!': true
            }
          }
        ],
        errors: [
          {
            message: "Unary operator '!' must be followed by whitespace."
          }
        ]
      },
      {
        code: 'new(Foo)',
        output: 'new (Foo)',
        options: [
          {
            words: true,
            overrides: {
              new: true
            }
          }
        ],
        errors: [
          {
            message: "Unary word operator 'new' must be followed by whitespace."
          }
        ]
      },
      {
        code: 'new(Foo)',
        output: 'new (Foo)',
        options: [
          {
            words: false,
            overrides: {
              new: true
            }
          }
        ],
        errors: [
          {
            message: "Unary word operator 'new' must be followed by whitespace."
          }
        ]
      },
      {
        code: '-> yield(0)',
        output: '-> yield (0)',
        options: [
          {
            words: true,
            overrides: {
              yield: true
            }
          }
        ],
        errors: [
          {
            message: "Unary word operator 'yield' must be followed by whitespace.",
            type: 'YieldExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: '-> yield(0)',
        output: '-> yield (0)',
        options: [
          {
            words: false,
            overrides: {
              yield: true
            }
          }
        ],
        errors: [
          {
            message: "Unary word operator 'yield' must be followed by whitespace.",
            type: 'YieldExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: "-> await{foo: 'bar'}",
        output: "-> await {foo: 'bar'}",
        errors: [
          {
            message: "Unary word operator 'await' must be followed by whitespace.",
            type: 'AwaitExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: "-> await{baz: 'qux'}",
        output: "-> await {baz: 'qux'}",
        options: [
          {
            words: false,
            overrides: {
              await: true
            }
          }
        ],
        errors: [
          {
            message: "Unary word operator 'await' must be followed by whitespace.",
            type: 'AwaitExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: '-> await {foo: 1}',
        output: '-> await{foo: 1}',
        options: [
          {
            words: false
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'await'.",
            type: 'AwaitExpression',
            line: 1,
            column: 4
          }
        ]
      },
      {
        code: '-> await {bar: 2}',
        output: '-> await{bar: 2}',
        options: [
          {
            words: true,
            overrides: {
              await: false
            }
          }
        ],
        errors: [
          {
            message: "Unexpected space after unary word operator 'await'.",
            type: 'AwaitExpression',
            line: 1,
            column: 4
          }
        ]
      }
    ]
  });

}).call(this);
