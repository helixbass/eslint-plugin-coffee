// Generated by CoffeeScript 2.5.0
(function() {
  /* eslint-disable */
  var a, b, i, j, len, len1, ref, ref1;

  ref = [0];
  /*expected
  initial->s1_1->s1_3->s1_2->s1_4->s1_6->s1_5->s1_7->s1_8->s1_9->s1_10->s1_5;
  s1_3->s1_12;
  s1_6->s1_11->s1_2;
  s1_7->s1_10;
  s1_8->s1_11;
  s1_10->s1_11->s1_12->final;
  */
  for (i = 0, len = ref.length; i < len; i++) {
    a = ref[i];
    ref1 = [1];
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      b = ref1[j];
      if (c) {
        break;
      }
      foo();
    }
  }

  /*DOT
digraph {
node[shape=box,style="rounded,filled",fillcolor=white];
initial[label="",shape=circle,style=filled,fillcolor=black,width=0.25,height=0.25];
final[label="",shape=doublecircle,style=filled,fillcolor=black,width=0.25,height=0.25];
s1_1[label="Program\nFor"];
s1_3[label="ArrayExpression\nLiteral (0)\nLiteral:exit (0)\nArrayExpression:exit"];
s1_2[label="Identifier (a)\nIdentifier:exit (a)"];
s1_4[label="BlockStatement\nFor"];
s1_6[label="ArrayExpression\nLiteral (1)\nLiteral:exit (1)\nArrayExpression:exit"];
s1_5[label="Identifier (b)\nIdentifier:exit (b)"];
s1_7[label="BlockStatement\nExpressionStatement\nConditionalExpression\nIdentifier (c)\nIdentifier:exit (c)"];
s1_8[label="BreakStatement\nBreakStatement:exit"];
s1_9[style="rounded,dashed,filled",fillcolor="#FF9800",label="<<unreachable>>\n????"];
s1_10[label="ExpressionStatement\nCallExpression\nIdentifier (foo)\nConditionalExpression:exit\nExpressionStatement:exit\nIdentifier:exit (foo)\nCallExpression:exit\nExpressionStatement:exit\nBlockStatement:exit"];
s1_12[label="For:exit\nProgram:exit"];
s1_11[label="For:exit\nBlockStatement:exit"];
initial->s1_1->s1_3->s1_2->s1_4->s1_6->s1_5->s1_7->s1_8->s1_9->s1_10->s1_5;
s1_3->s1_12;
s1_6->s1_11->s1_2;
s1_7->s1_10;
s1_8->s1_11;
s1_10->s1_11->s1_12->final;
}
*/

}).call(this);
