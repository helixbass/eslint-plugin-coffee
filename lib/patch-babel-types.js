// Generated by CoffeeScript 2.5.0
(function() {
  var VISITOR_KEYS, assertEach, assertNodeType, assertValueType, chain, defineType;

  require('babel-types');

  ({
    default: defineType,
    assertNodeType,
    assertValueType,
    chain,
    assertEach,
    VISITOR_KEYS
  } = require('babel-types/lib/definitions'));

  module.exports = function() {
    if (VISITOR_KEYS.JSXFragment) {
      return;
    }
    defineType('JSXFragment', {
      builder: ['openingFragment', 'closingFragment', 'children'],
      visitor: ['openingFragment', 'children', 'closingFragment'],
      aliases: ['JSX', 'Immutable', 'Expression'],
      fields: {
        openingFragment: {
          validate: assertNodeType('JSXOpeningFragment')
        },
        closingFragment: {
          validate: assertNodeType('JSXClosingFragment')
        },
        children: {
          validate: chain(assertValueType('array'), assertEach(assertNodeType('JSXText', 'JSXExpressionContainer', 'JSXSpreadChild', 'JSXElement', 'JSXFragment')))
        }
      }
    });
    defineType('JSXOpeningFragment', {
      aliases: ['JSX', 'Immutable']
    });
    return defineType('JSXClosingFragment', {
      aliases: ['JSX', 'Immutable']
    });
  };

}).call(this);
