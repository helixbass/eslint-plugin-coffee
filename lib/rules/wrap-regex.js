// Generated by CoffeeScript 2.5.0
(function() {
  /**
   * @fileoverview Rule to flag when regex literals are not wrapped in parens
   * @author Matt DuVall <http://www.mattduvall.com>
   */
  'use strict';
  //------------------------------------------------------------------------------
  // Rule Definition
  //------------------------------------------------------------------------------
  module.exports = {
    meta: {
      docs: {
        description: 'require parenthesis around regex literals',
        category: 'Stylistic Issues',
        recommended: false,
        url: 'https://eslint.org/docs/rules/wrap-regex'
      },
      schema: [],
      fixable: 'code',
      messages: {
        requireParens: 'Wrap the regexp literal in parens to disambiguate the slash.'
      }
    },
    create: function(context) {
      var sourceCode;
      sourceCode = context.getSourceCode();
      return {
        Literal: function(node) {
          var afterToken, ancestors, beforeToken, grandparent, nodeType, token;
          token = sourceCode.getFirstToken(node);
          nodeType = token.type;
          if (nodeType === 'RegularExpression' && node.delimiter !== '///') {
            beforeToken = sourceCode.getTokenBefore(node);
            afterToken = sourceCode.getTokenAfter(node);
            ancestors = context.getAncestors();
            grandparent = ancestors[ancestors.length - 1];
            if (grandparent.type === 'MemberExpression' && grandparent.object === node && !(beforeToken && beforeToken.value === '(' && afterToken && afterToken.value === ')')) {
              return context.report({
                node,
                messageId: 'requireParens',
                fix: function(fixer) {
                  return fixer.replaceText(node, `(${sourceCode.getText(node)})`);
                }
              });
            }
          }
        }
      };
    }
  };

}).call(this);
