// Generated by CoffeeScript 2.5.0
(function() {
  /**
   * @fileoverview Rule to check for implicit objects
   * @author Julian Rosse
   */
  'use strict';
  //------------------------------------------------------------------------------
  // Rule Definition
  //------------------------------------------------------------------------------
  module.exports = {
    meta: {
      docs: {
        description: 'forbid implicit objects',
        category: 'Stylistic Issues',
        recommended: false
      },
      // url: 'https://eslint.org/docs/rules/max-len'
      schema: [
        {
          type: 'string',
          enum: ['never']
        },
        {
          type: 'object',
          properties: {
            allowOwnLine: {
              type: 'boolean'
            }
          },
          additionalProperties: false
        }
      ]
    },
    create: function(context) {
      var allowOwnLine, ref, sourceCode, startsLine;
      ({allowOwnLine} = (ref = context.options[1]) != null ? ref : {});
      sourceCode = context.getSourceCode();
      startsLine = function(node) {
        var prevToken;
        prevToken = sourceCode.getTokenBefore(node);
        if (!prevToken) {
          return true;
        }
        return node.loc.start.line !== prevToken.loc.start.line;
      };
      return {
        //--------------------------------------------------------------------------
        // Public API
        //--------------------------------------------------------------------------
        ObjectExpression: function(node) {
          var ref1, ref2;
          if (!node.implicit) {
            return;
          }
          if (((ref1 = node.parent) != null ? (ref2 = ref1.parent) != null ? ref2.type : void 0 : void 0) === 'ClassBody') {
            return;
          }
          if (allowOwnLine && startsLine(node)) {
            return;
          }
          return context.report({
            node,
            message: 'Use explicit curly braces around objects'
          });
        }
      };
    }
  };

}).call(this);
