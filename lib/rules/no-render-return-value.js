// Generated by CoffeeScript 2.5.0
(function() {
  /**
   * @fileoverview Prevent usage of the return value of React.render
   * @author Dustan Kasten
   */
  'use strict';
  var docsUrl, versionUtil;

  versionUtil = require('eslint-plugin-react/lib/util/version');

  docsUrl = require('eslint-plugin-react/lib/util/docsUrl');

  // ------------------------------------------------------------------------------
  // Rule Definition
  // ------------------------------------------------------------------------------
  module.exports = {
    meta: {
      docs: {
        description: 'Prevent usage of the return value of React.render',
        category: 'Best Practices',
        recommended: true,
        url: docsUrl('no-render-return-value')
      },
      schema: []
    },
    create: function(context) {
      return {
        // --------------------------------------------------------------------------
        // Public
        // --------------------------------------------------------------------------
        CallExpression: function(node) {
          var callee, calleeObjectName, parent, ref;
          ({callee, parent} = node);
          if (callee.type !== 'MemberExpression') {
            return;
          }
          calleeObjectName = /^ReactDOM$/;
          if (versionUtil.testReactVersion(context, '15.0.0')) {
            calleeObjectName = /^ReactDOM$/;
          } else if (versionUtil.testReactVersion(context, '0.14.0')) {
            calleeObjectName = /^React(DOM)?$/;
          } else if (versionUtil.testReactVersion(context, '0.13.0')) {
            calleeObjectName = /^React$/;
          }
          if (!(callee.object.type === 'Identifier' && calleeObjectName.test(callee.object.name) && callee.property.name === 'render')) {
            return;
          }
          if (((ref = parent.type) === 'VariableDeclarator' || ref === 'Property' || ref === 'ReturnStatement' || ref === 'ArrowFunctionExpression' || ref === 'AssignmentExpression') || node.returns) {
            return context.report({
              node: callee,
              message: `Do not depend on the return value from ${callee.object.name}.render`
            });
          }
        }
      };
    }
  };

}).call(this);
